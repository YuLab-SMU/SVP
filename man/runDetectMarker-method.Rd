% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-detect.marker.R
\name{runDetectMarker}
\alias{runDetectMarker}
\alias{runDetectMarker,SingleCellExperiment-method}
\alias{runDetectMarker,SingleCellExperiment}
\title{Detecting the specific cell features with nearest distance of cells in MCA space}
\usage{
runDetectMarker(
  data,
  group.by,
  aggregate.group = TRUE,
  reduction = "MCA",
  dims = 30,
  ntop = 200,
  present.prop = 0.2,
  type = c("positive", "all", "negative"),
  consider.unique.in.group = TRUE,
  ...
)

\S4method{runDetectMarker}{SingleCellExperiment}(
  data,
  group.by,
  aggregate.group = TRUE,
  reduction = "MCA",
  dims = 30,
  ntop = 200,
  present.prop = 0.2,
  type = c("positive", "all", "negative"),
  consider.unique.in.group = TRUE,
  ...
)
}
\arguments{
\item{data}{SingleCellExperiment object}

\item{group.by}{the column name of cell annotation.}

\item{aggregate.group}{logical whether calculate the center cluster of each group of cell according
to the \code{group.by}, then find the nearest features of the center cluster, default TRUE. If
FALSE, meaning the nearest features to each cell are detected firstly.}

\item{reduction}{character which reduction space, default is \code{'MCA'}.}

\item{dims}{integer the number of components to defined the nearest distance.}

\item{ntop}{integer the top number of nearest or furthest (\code{type = 'negative'}) features,
default is 200 .}

\item{present.prop}{numeric the appearance proportion of samples in the corresponding group in \code{group.by},
default is 0.2 .}

\item{type}{character which features are be extracted, the nearest features (\code{type='positive'})
or furthest features (\code{type = 'negative'}) or both (\code{type='all'}), default is
\code{type='positive'}.}

\item{consider.unique.in.group}{logical whether detect the unique features belonging to one cell cluster.}

\item{...}{additional parameters.}
}
\value{
a list, which contains features and named with clusters of \code{group.by}.
}
\description{
Detecting the specific cell features with nearest distance of cells in MCA space
}
\examples{
example(runMCA, echo = FALSE)
small.sce |> runDetectMarker(group.by='Cell_Cycle', ntop=20, 
              present.prop=.9, consider.unique.in.group=FALSE)
}
